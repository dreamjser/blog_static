@charset "UTF-8";
/* 颜色 */
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
.sprite {
  display: inline-block; }

.sprite-top-icon {
  background-image: url(../../images/sprites/sprite.png);
  background-position: 0px -82px;
  width: 28px;
  height: 25px; }

.sprite-top {
  background-image: url(../../images/sprites/sprite.png);
  background-position: 0px 0px;
  width: 114px;
  height: 77px; }

.mod-category-list li {
  padding: 1px 0;
  list-style: none; }

.mod-tag-list a {
  display: inline-block;
  padding: .35em .6em .45em;
  margin-bottom: 5px; }

.mod-hot-list li {
  padding: 1px 0; }

.article-content {
  margin-top: 20px;
  color: #555;
  font-size: 18px;
  word-break: break-all;
  line-height: 1.65; }
  .article-content p {
    color: #555 !important;
    text-indent: 2em; }
    .article-content p * {
      color: #555 !important; }
    .article-content p a {
      color: #3595e7 !important;
      text-decoration: underline !important; }
  .article-content ul {
    list-style-position: inside; }
  .article-content h2 {
    margin: 30px 0 20px; }
  .article-content pre {
    margin-bottom: 20px; }
  .article-content table th, .article-content table td {
    padding: 8px 20px;
    border: 1px #555 solid; }
  .article-content table tbody > tr:nth-child(odd) {
    background: #efefef; }

.comment {
  min-height: 262px; }

.comment-loading {
  background: url(../../images/loading.gif) no-repeat center 40px; }

.article-header {
  position: relative; }
  .article-header h1 {
    color: #555; }
    .article-header h1 i {
      position: absolute;
      right: 0px;
      top: -25px; }
  .article-header .top-header {
    margin-right: 80px; }
  .article-header .article-time {
    color: #999; }
    .article-header .article-time i {
      width: 16px;
      height: 16px;
      margin-left: 30px;
      vertical-align: middle; }

.article-content h2 {
  padding-left: 8px;
  border-left: 3px #3595e7 solid;
  font-size: 28px; }

.article-tags {
  padding: 20px 0 22px;
  font-size: 20px; }
  .article-tags strong {
    color: #555; }
  .article-tags strong, .article-tags a {
    vertical-align: middle; }

.article-nodata {
  color: red;
  font-size: 26px;
  text-align: center; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
